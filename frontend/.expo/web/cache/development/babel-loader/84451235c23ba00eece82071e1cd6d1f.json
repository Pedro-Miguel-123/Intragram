{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\pedro\\\\instagram\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { NavigatioonContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCpJz9TuWZJTy_RxGKnVASxBHygux7JhsM\",\n  authDomain: \"instagram-dev-72488.firebaseapp.com\",\n  projectId: \"instagram-dev-72488\",\n  storageBucket: \"instagram-dev-72488.appspot.com\",\n  messagingSenderId: \"1033749248643\",\n  appId: \"1:1033749248643:web:443b143b1969eb255179b6\",\n  measurementId: \"G-KYK2JT0P80\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport MainScreen from \"./components/Main\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 22\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        }, \" Loading \"), \" \");\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 22\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }\n        }), \" \", React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 20\n          }\n        })), \" \");\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 18\n        }\n      }, React.createElement(MainScreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["C:/Users/pedro/instagram/App.js"],"names":["StatusBar","React","Component","NavigatioonContainer","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","MainScreen","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { NavigatioonContainer } from '@react-navigation/native'\nimport { View, Text } from 'react-native'\n\nimport * as firebase from 'firebase'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCpJz9TuWZJTy_RxGKnVASxBHygux7JhsM\",\n    authDomain: \"instagram-dev-72488.firebaseapp.com\",\n    projectId: \"instagram-dev-72488\",\n    storageBucket: \"instagram-dev-72488.appspot.com\",\n    messagingSenderId: \"1033749248643\",\n    appId: \"1:1033749248643:web:443b143b1969eb255179b6\",\n    measurementId: \"G-KYK2JT0P80\"\n};\n\nif (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig)\n}\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport LandingScreen from './components/auth/Landing'\nimport RegisterScreen from './components/auth/Register'\nimport MainScreen from './components/Main'\n\nconst Stack = createStackNavigator();\n\n\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n        }\n    }\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (!user) {\n                this.setState({\n                    loggedIn: false,\n                    loaded: true,\n                })\n            } else {\n                this.setState({\n                    loggedIn: true,\n                    loaded: true,\n                })\n            }\n        })\n    }\n    render() {\n        const { loggedIn, loaded } = this.state\n        if (!loaded) {\n            return ( <\n                View style = {\n                    { flex: 1, justifyContent: 'center' } } >\n                <\n                Text > Loading < /Text> <\n                /View>\n            )\n        }\n        if (!loggedIn) {\n            return ( <\n                NavigationContainer >\n                <\n                Stack.Navigator initialRouteName = \"Landing\" >\n                <\n                Stack.Screen name = \"Landing\"\n                component = { LandingScreen }\n                options = {\n                    { headerShown: false } }\n                /> <\n                Stack.Screen name = \"Register\"\n                component = { RegisterScreen }\n                />\n\n                <\n                /Stack.Navigator> <\n                /NavigationContainer>\n\n            );\n        }\n\n        return ( <\n            Provider store = { store } >\n            <\n            MainScreen / >\n            <\n            /Provider>\n\n        )\n\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}